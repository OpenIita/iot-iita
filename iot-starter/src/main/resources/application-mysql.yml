server:
  port: 8086

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 12MB

  #注： 切换数据库时需要将项目根目录中的.init文件删除再重启
  # <<==========mysql配置开始==============
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/iotkit?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
    driverClassName: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    validationQuery: SELECT 1
    testOnBorrow: true
  jpa:
    database: MySQL
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  #    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  # ============mysql配置结束============>>

  #<<================es时序数据配置开始===============
  elasticsearch:
    rest:
      #使用内置es的配置
      #uris: http://elasticsearch:9200
      uris: http://127.0.0.1:9200
      username:
      password:
      connection-timeout: 10s
  #================es时序数据配置结束===============>>

  #<<===========tdengine时序数据库配置开始============
#  td-datasource:
#    url: jdbc:TAOS-RS://127.0.0.1:6041/iotkit?timezone=UTC-8&charset=UTF-8&locale=en_US.UTF-8
#    username: root
#    password: taosdata
#    driverClassName: com.taosdata.jdbc.rs.RestfulDriver
  #===========tdengine时序数据库配置开始============>>


  redis:
    #使用内置redis的配置
    #host: redis
    host: 127.0.0.1
    port: 6379
    database: 0
    password:

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

#图片存储用的是阿里云oss，如果需要上传产品图片才需要配置
aliyun:
  bucketId:
  endpoint:
  accessKeyId:
  accessKeySecret:

#application.yml中打开注释支持rocketMq作为消息总线，pom.xml中打开注释使用rocketmq消息总线
#rocketmq:
#  name-server: 127.0.0.1:9876
#  producer:
#        group: iotkit

sa-token:
  # token名称 (同时也是cookie名称)
  token-name: token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false

#认证中心地址
oauth2:
  auth-server-url: http://127.0.0.1:8086
